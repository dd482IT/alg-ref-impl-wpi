package dev.thinke.domain.data.type;

import dev.thinke.domain.util.Math;

@org.checkerframework.framework.qual.AnnotatedFor("org.checkerframework.checker.nullness.NullnessChecker")
public interface Dictionary<K extends Comparable<K>, V> {

    @org.checkerframework.dataflow.qual.Pure
    V search(K key);

    @org.checkerframework.dataflow.qual.Pure
    void insert(K key, V value);

    @org.checkerframework.dataflow.qual.Pure
    void delete(K key);

    @org.checkerframework.dataflow.qual.Pure
    @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull Integer size();

    default  @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker.nullness.qual.NonNull int deriveKey(Object key) {
        return Math.hash(key) % size();
    }
}
