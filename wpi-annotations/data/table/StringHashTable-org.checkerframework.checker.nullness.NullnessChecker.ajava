package dev.thinke.domain.data.table;

import dev.thinke.domain.data.type.Dictionary;
import org.apache.commons.math3.primes.Primes;

@org.checkerframework.framework.qual.AnnotatedFor(
    "org.checkerframework.checker.nullness.NullnessChecker")
public class StringHashTable<K extends Comparable<K>> implements Dictionary<K, String> {

  private final @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework
      .checker.nullness.qual.NonNull String
          @org.checkerframework.checker.initialization.qual.Initialized
          @org.checkerframework.checker.nullness.qual.NonNull []
      values;

  private final @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework
      .checker.nullness.qual.NonNull Integer n;

  public StringHashTable(int capacity) {
    this.n = Primes.nextPrime(capacity * 2);
    this.values = new String[this.n];
  }

  public @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker
      .nullness.qual.NonNull String search(
      @org.checkerframework.checker.initialization.qual.Initialized
          @org.checkerframework.checker.nullness.qual.NonNull
          StringHashTable<K> this,
      K key) {
    int i = deriveKey(key);
    return values[i];
  }

  public void insert(
      @org.checkerframework.checker.initialization.qual.Initialized
          @org.checkerframework.checker.nullness.qual.NonNull
          StringHashTable<K> this,
      K key,
      @org.checkerframework.checker.initialization.qual.Initialized
          @org.checkerframework.checker.nullness.qual.NonNull
          String value) {
    int i = deriveKey(key);
    values[i] = value;
  }

  public void delete(
      @org.checkerframework.checker.initialization.qual.Initialized
          @org.checkerframework.checker.nullness.qual.NonNull
          StringHashTable<K> this,
      K key) {
    int i = deriveKey(key);
    values[i] = null;
  }

  @org.checkerframework.dataflow.qual.Pure
  public @org.checkerframework.checker.initialization.qual.Initialized @org.checkerframework.checker
      .nullness.qual.NonNull Integer size(
      @org.checkerframework.checker.initialization.qual.Initialized
          @org.checkerframework.checker.nullness.qual.NonNull
          StringHashTable<K> this) {
    return n;
  }
}
