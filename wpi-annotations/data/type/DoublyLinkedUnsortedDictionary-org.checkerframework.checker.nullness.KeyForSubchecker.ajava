package dev.thinke.domain.data.type;

@org.checkerframework.framework.qual.AnnotatedFor(
    "org.checkerframework.checker.nullness.KeyForSubchecker")
public abstract class DoublyLinkedUnsortedDictionary<K extends Comparable<K>, V>
    extends UnsortedDictionary<K, V> {

  /**
   * @param key
   * @return
   */
  public V search(DoublyLinkedUnsortedDictionary<K, V> this, K key) {
    return super.search(key);
  }

  /**
   * @param key
   * @param value
   */
  public void insert(DoublyLinkedUnsortedDictionary<K, V> this, K key, V value) {
    super.insert(key, value);
  }

  /**
   * @param key
   */
  public void delete(DoublyLinkedUnsortedDictionary<K, V> this, K key) {
    super.delete(key);
  }

  /**
   * @return
   */
  public V max(DoublyLinkedUnsortedDictionary<K, V> this) {
    return super.max();
  }

  /**
   * @return
   */
  public V min(DoublyLinkedUnsortedDictionary<K, V> this) {
    return super.min();
  }

  /**
   * @param key
   * @return
   */
  public V previous(DoublyLinkedUnsortedDictionary<K, V> this, K key) {
    return super.previous(key);
  }

  /**
   * @param key
   * @return
   */
  public V next(DoublyLinkedUnsortedDictionary<K, V> this, K key) {
    return super.next(key);
  }
}
