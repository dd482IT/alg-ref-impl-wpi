package dev.thinke.domain.data.type;

@org.checkerframework.framework.qual.AnnotatedFor("org.checkerframework.checker.nullness.KeyForSubchecker")
public abstract class SinglyLinkedSortedDictionary<K extends Comparable<K>, V> extends SortedDictionary<K, V> {

    /**
     * @param key
     * @return
     */
    public V search( SinglyLinkedSortedDictionary<K, V> this, K key) {
        return super.search(key);
    }

    /**
     * @param key
     * @param value
     */
    public void insert( SinglyLinkedSortedDictionary<K, V> this, K key, V value) {
        super.insert(key, value);
    }

    /**
     * @param key
     */
    public void delete( SinglyLinkedSortedDictionary<K, V> this, K key) {
        super.delete(key);
    }

    /**
     * @return
     */
    public V max( SinglyLinkedSortedDictionary<K, V> this) {
        return super.max();
    }

    /**
     * @return
     */
    public V min( SinglyLinkedSortedDictionary<K, V> this) {
        return super.min();
    }

    /**
     * @param key
     * @return
     */
    public V previous( SinglyLinkedSortedDictionary<K, V> this, K key) {
        return super.previous(key);
    }

    /**
     * @param key
     * @return
     */
    public V next( SinglyLinkedSortedDictionary<K, V> this, K key) {
        return super.next(key);
    }
}
